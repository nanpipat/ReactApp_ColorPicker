{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","color","setColor","hide","setHide","style","backgroundColor","className","styles","default","picker","position","bottom","left","onChange","updatedColor","hex","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,OCsCAA,MAjCf,WAAgB,IAAD,EAEaC,mBAAS,aAFtB,mBAENC,EAFM,KAECC,EAFD,OAGWF,oBAAS,GAHpB,mBAGNG,EAHM,KAGAC,EAHA,KAeb,OACE,qBAAKC,MAAO,CAACC,gBAAiBL,GAAQM,UAAU,MAAhD,SACE,sBAAKA,UAAU,YAAf,UACGJ,GACC,cAAC,IAAD,CACEK,OAfW,CACnBC,QAAS,CACPC,OAAQ,CACNC,SAAU,WACVC,OAAQ,OACRC,KAAM,WAWFZ,MAAOA,EACPa,SAAU,SAACC,GAAD,OAAkBb,EAASa,EAAaC,QAGtD,wBAAQC,QAAS,kBAAMb,GAASD,IAAhC,SACGA,EAAO,eAAiB,4BCnBpBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ef1ab908.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [color, setColor] = useState(\"lightblue\");\n  const [hide, setHide] = useState(false)\n\n  const pickerStyles = {\n    default: {\n      picker: {\n        position: \"absolute\",\n        bottom: \"30px\",\n        left: \"100px\"\n      }\n    }\n  };\n\n  return (\n    <div style={{backgroundColor: color}} className=\"App\">\n      <div className=\"container\">\n        {hide && (\n          <ChromePicker\n            styles={pickerStyles}\n            color={color}\n            onChange={(updatedColor) => setColor(updatedColor.hex)}\n          />\n        )}\n        <button onClick={() => setHide(!hide)}>\n          {hide ? 'Close picker' : 'Open color picker'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}